.\" -*- mode: troff; coding: utf-8 -*-
.\" Automatically generated by Pod::Man 5.01 (Pod::Simple 3.43)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" \*(C` and \*(C' are quotes in nroff, nothing in troff, for use with C<>.
.ie n \{\
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "PCSC-SPY 1"
.TH PCSC-SPY 1 2024-01-01 "pcsc-lite 2.2.0" "PC/SC lite"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH NAME
pcsc\-spy \- A PC/SC spy command
.SH SYNOPSIS
.IX Header "SYNOPSIS"
pcsc-spy [\fB\-n\fR|\fB\-\-nocolor\fR] [\fB\-d\fR|\fB\-\-diffable\fR] [\fB\-h\fR|\fB\-\-help\fR]
[\fB\-v\fR|\fB\-\-version\fR] [\fB\-t\fR|\fB\-\-thread\fR] [\fIfifo_filename\fR]
.SH DESCRIPTION
.IX Header "DESCRIPTION"
pcsc-spy displays PC/SC calls of an application. It must be used with
the \fIlibpcscspy.so.0\fR library.
.PP
To be able to spy the PC/SC layer, the application flow must be
modified using \f(CW\*(C`LIBPCSCLITE_DELEGATE\*(C'\fR so that all PC/SC calls are
redirected.
.SH OPTIONS
.IX Header "OPTIONS"
.IP "\fB\-d\fR, \fB\-\-diffable\fR" 4
.IX Item "-d, --diffable"
Remove the variable parts (like handler values) from the output so that
two execution can be more easily compared.
.IP "\fB\-h\fR, \fB\-\-help\fR" 4
.IX Item "-h, --help"
Display a short help text.
.IP "\fB\-n\fR, \fB\-\-nocolor\fR" 4
.IX Item "-n, --nocolor"
Disable the output colorization (if you want redirect the output in a
file for example).
.IP "\fB\-v\fR, \fB\-\-version\fR" 4
.IX Item "-v, --version"
Print the version of the \fIpcsc-spy\fR program plus a copyright, a list of
authors.
.IP "\fB\-t\fR, \fB\-\-thread\fR" 4
.IX Item "-t, --thread"
Add a thread number before each line of log to identify the calls from
the same threads.
.SH EXAMPLES
.IX Header "EXAMPLES"
We will use the \f(CW\*(C`LIBPCSCLITE_DELEGATE\*(C'\fR environment variable to load our
spying library.
.PP
Example:
.PP
.Vb 2
\& sh /usr/share/doc/libpcsclite\-dev/setup_spy.sh
\& export LIBPCSCLITE_DELEGATE=/lib/x86_64\-linux\-gnu/libpcscspy.so.0
\&
\& LIBPCSCLITE_DELEGATE=/lib/x86_64\-linux\-gnu/libpcscspy.so.0 my_application
.Ve
.SS "Starting the spy tool"
.IX Subsection "Starting the spy tool"
.Vb 1
\& pcsc\-spy
.Ve
.PP
If a command argument is passed we use it instead of the default
\&\fI~/pcsc\-spy\fR FIFO file. It is then possible to record an execution log
and use pcsc-spy multiple times on the same log.
.PP
To create the log file just do:
.PP
.Vb 2
\& mkfifo ~/pcsc\-spy
\& cat ~/pcsc\-spy > logfile
.Ve
.PP
and run your PC/SC application.
.SH FILES
.IX Header "FILES"
\&\fI~/pcsc\-spy\fR FIFO file is used by \fIlibpcscspy.so.0\fR to send the raw
log lines
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\fBpcscd\fR\|(8)
.SH AUTHOR
.IX Header "AUTHOR"
This manual page was written by Ludovic Rousseau <rousseau@free.fr>
